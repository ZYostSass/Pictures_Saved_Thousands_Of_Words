version: '3'

services:
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
#    environment:
#      - POSTGRES_USER=rustweb
#      - POSTGRES_PASSWORD=rustweb
#      - POSTGRES_DB=postgres

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 25

  backend:
    container_name: backend
    build: ./backend/
    restart: always
    ports:
      - "3000:3000"
    #environment:
      # This prevents SQLX from trying to connect to database during compile
      # We need to run cargo sqlx prepare first
      #- SQLX_OFFLINE=true
      # Note the change here from @localhost to @postgres to match service name
      #- DATABASE_URL=postgres://rustweb:rustweb@postgres/postgres
      # Instead of listening on "localhost" or "127.0.0.1" we want to listen on every interface
      #- API_HOST=0.0.0.0
      #- API_PORT=3000
      #- JWT_SECRET=put_a_totally_random_hash_here_for_security
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

volumes:
  db:
    driver: local

